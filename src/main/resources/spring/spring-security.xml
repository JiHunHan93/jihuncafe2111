<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:s="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-5.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
		
	<!-- Spring Security 설정 -->
	<s:http auto-config="true" use-expressions="true">
	
		<s:csrf disabled="true"/>
		
		<!-- 정적 리소스는 모두 접근 허용 -->
		<s:intercept-url pattern="/resources/**" access="permitAll" />
		<s:intercept-url pattern="/member/login29" access="permitAll" />
		<s:intercept-url pattern="/**/*" method="OPTIONS" access="permitAll" />
		
		<!-- 로그인된 상태에서는 로그인이나 회원가입 화면에 접근 못하도록 함 -->
		<s:intercept-url pattern="/member/login" access="isAnonymous()" />
		<s:intercept-url pattern="/member/regist" access="isAnonymous()" />
		
		<!-- 로그인이 되지 않은 상태에서는 main화면에 접속 불가 -->
		<s:intercept-url pattern="/main" access="isAuthenticated()" />
		<s:intercept-url pattern="/" access="isAuthenticated()" />
		
		<!-- 관리자 페이지는 관리자만 접근 허용 -->
		<s:intercept-url pattern="/master/**" access="hasRole('MASTER')" />
		<s:intercept-url pattern="/admin/**" access="hasAnyRole('MASTER', 'ADMIN')" />
		<s:intercept-url pattern="/user/**" access="hasAnyRole('MASTER', 'ADMIN', 'USER')" />
		
		<!-- 로그인 설정 -->
		<s:form-login 
						username-parameter="email"
						password-parameter="pwd"
						login-processing-url="/member/login"
						login-page="/member/login"
						authentication-success-handler-ref="userLoginSuccessHandler"
						authentication-failure-handler-ref="userLoginFailHandler" />
		
		<!-- 로그아웃 설정 -->
		<s:logout
						logout-url="/member/logout"
						logout-success-url="/"
						invalidate-session="true"
						delete-cookies="true" />
	
	</s:http>
	
	<s:global-method-security secured-annotations="enabled" />
	
	<!-- 권한이 없어서 금지된 URI 접속할 때 보여줄 페이지(403 에러 페이지 대체) -->
	<!-- 왜 오류나는지 모르겠다 12/17 -->
	<!-- <s:access-denied-handler error-page="/mainpage/main" /> -->
	
	<!-- DB 연동 설정 -->
	<s:authentication-manager>
		<s:authentication-provider ref="authenticationProvider"/>
	</s:authentication-manager>
	
	<bean id="authenticationProvider" class="com.jihun.cafe.common.springsecurity.CustomAuthenticationProvider"/>
	<bean id="userAuthService" class="com.jihun.cafe.common.springsecurity.UserDetailsServiceCustom"/>
	<bean id="userLoginFailHandler" class="com.jihun.cafe.common.springsecurity.UserLoginFailHandler"/>
	<bean id="userLoginSuccessHandler" class="com.jihun.cafe.common.springsecurity.UserLoginSuccessHandler"/>
	<bean id="pwEncoding" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	
	<bean id="userAuthProvider" class="com.jihun.cafe.common.springsecurity.UserAuthProvider">
		<property name="userDetailsService" ref="userAuthService" />
		<property name="passwordEncoder" ref="pwEncoding" />
	</bean>
</beans>